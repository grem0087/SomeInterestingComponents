using System;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.DependencyInjection;

namespace WebApplication2.Infrastructure
{
    public class MyBadRequestObject
    {
        private readonly ActionContext _context;

        public MyBadRequestObject(ActionContext context)
        {
            _context = context;
        }

        public ValidationProblemDetails Result()
        {
            return new ValidationProblemDetails(_context.ModelState)
            {
                Type = "https://contoso.com/probs/modelvalidation",
                Title = "One or more model validation errors occurred.",
                Status = StatusCodes.Status400BadRequest,
                Detail = "See the errors property for details.",
                Instance = _context.HttpContext.Request.Path
            };
        }
    }
    public static class ConfigurationExtension
    {

        public static IMvcBuilder ConfigureBadRequestBehavior(this IMvcBuilder mvc)
        {
            mvc
                .ConfigureApiBehaviorOptions(options => options.InvalidModelStateResponseFactory = ConfigureFactory);
            return mvc;
        }

        public static IActionResult ConfigureFactory(ActionContext context)
        {
            var result = new MyBadRequestObject(context);

            return new BadRequestObjectResult(result.Result())
            {
                ContentTypes = { "application/problem+json" }
            };
        }
    }
}
